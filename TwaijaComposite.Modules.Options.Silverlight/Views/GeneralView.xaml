<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:common="clr-namespace:TwaijaComposite.Modules.Common;assembly=TwaijaComposite.Modules.Common.Silverlight"
    xmlns:control="clr-namespace:TwaijaComposite.Modules.Controls;assembly=TwaijaComposite.Modules._.Controls.Silverlight"
    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
    xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="TwaijaComposite.Modules.Options.Views.GeneralView"
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="400">
    <UserControl.Resources>
    	<Style x:Key="CheckBoxStyle" TargetType="CheckBox">
    		<Setter Property="Background" Value="#FF448DCA"/>
    		<Setter Property="Foreground" Value="#FF000000"/>
    		<Setter Property="HorizontalContentAlignment" Value="Left"/>
    		<Setter Property="VerticalContentAlignment" Value="Top"/>
    		<Setter Property="Padding" Value="4,1,0,0"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="BorderBrush">
    			<Setter.Value>
    				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    					<GradientStop Color="#FFA3AEB9" Offset="0"/>
    					<GradientStop Color="#FF8399A9" Offset="0.375"/>
    					<GradientStop Color="#FF718597" Offset="0.375"/>
    					<GradientStop Color="#FF617584" Offset="1"/>
    				</LinearGradientBrush>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="CheckBox">
    					<Grid>
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="16"/>
    							<ColumnDefinition Width="*"/>
    						</Grid.ColumnDefinitions>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    										<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="CheckStates">
    								<VisualState x:Name="Checked">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Unchecked"/>
    								<VisualState x:Name="Indeterminate"/>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualState x:Name="Focused"/>
    								<VisualState x:Name="Unfocused"/>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="ValidationStates">
    								<VisualState x:Name="Valid"/>
    								<VisualState x:Name="InvalidUnfocused">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="InvalidFocused">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<System:Boolean>True</System:Boolean>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
    							<Ellipse x:Name="BoxMiddle" Height="auto"  StrokeThickness="1" Width="auto">
    								<Ellipse.Fill>
    									<LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
    										<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
    										<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
    										<GradientStop Color="#EAFFFFFF" Offset="0.603"/>
    										<GradientStop Color="#D8FFFFFF" Offset="1"/>
    									</LinearGradientBrush>
    								</Ellipse.Fill>
    								<Ellipse.Stroke>
    									<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
    										<GradientStop Color="#FFFFFFFF" Offset="1"/>
    										<GradientStop Color="#FFFFFFFF" Offset="0"/>
    										<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
    										<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
    									</LinearGradientBrush>
    								</Ellipse.Stroke>
    							</Ellipse>
    							<Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="#FF333333" FlowDirection="LeftToRight" Height="10" Margin="1,1,0,1.5" Opacity="0" Stretch="Fill" Width="10.5"/>
    							<Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
    								<ToolTipService.ToolTip>
    									<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
    										<ToolTip.Triggers>
    											<EventTrigger RoutedEvent="Canvas.Loaded">
    												<BeginStoryboard>
    													<Storyboard>
    														<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
    															<DiscreteObjectKeyFrame KeyTime="0">
    																<DiscreteObjectKeyFrame.Value>
    																	<System:Boolean>true</System:Boolean>
    																</DiscreteObjectKeyFrame.Value>
    															</DiscreteObjectKeyFrame>
    														</ObjectAnimationUsingKeyFrames>
    													</Storyboard>
    												</BeginStoryboard>
    											</EventTrigger>
    										</ToolTip.Triggers>
    									</ToolTip>
    								</ToolTipService.ToolTip>
    								<Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
    									<Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C" Margin="0,3,0,0"/>
    									<Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff" Margin="0,3,0,0"/>
    								</Grid>
    							</Border>
    						</Grid>
    						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="LocationListBoxItemStyle" TargetType="ListBoxItem">
    		<Setter Property="Padding" Value="3"/>
    		<Setter Property="HorizontalContentAlignment" Value="Center"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Background" Value="#A58B8B8B"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="TabNavigation" Value="Local"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="ListBoxItem">
    					<Grid x:Name="grid" >
    						<Grid.Projection>
    							<PlaneProjection/>
    						</Grid.Projection>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="SelectionStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition From="Unselected" GeneratedDuration="0" To="Selected">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="grid">
    												<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    												<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="-35" KeySpline="0.5,0,0.51,1"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualTransition>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Unselected"/>
    								<VisualState x:Name="Selected">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor2"/>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualState x:Name="Focused"/>
    								<VisualState x:Name="Unfocused"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
							<Rectangle Fill="{TemplateBinding Background}" Margin="1"></Rectangle>
    						<Rectangle x:Name="fillColor" Margin="1" Fill="White" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
    						<Rectangle x:Name="fillColor2" Margin="1" Fill="White" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
    						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Margin" Value="0"/>
    		<Setter Property="Height" Value="150"/>
    		<Setter Property="Width" Value="150"/>
    	</Style>
    </UserControl.Resources>
        <Grid x:Name="LayoutRoot" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>-->
        <StackPanel Orientation="Vertical"  HorizontalAlignment="Left">
            <CheckBox FontFamily="Segoe UI Light" Margin="8"  FontSize="24"   Foreground="{StaticResource ResourceKey={control:Static Member=common:InfrastructureResourceLocator.mainforegroundbrushkey}}" HorizontalAlignment="Left" x:Name="showmessagesentdialog" IsChecked="{Binding ShowMessageSentDialog,Mode=TwoWay}" Style="{StaticResource OptionsCheckBoxStyle}" Content="Display Message Delivered ?" VerticalContentAlignment="Top" />
            <!--<Border CornerRadius="3" Background="#A7000000" HorizontalAlignment="Left" Margin="8">
                <TextBlock Style="{StaticResource smalltext}" Width="300" Margin="5" HorizontalAlignment="Left">This determines wether a "Message Confirmation dialog pops up everytime u post a message through the clipboard</TextBlock>
            </Border>-->
        </StackPanel>
        <CheckBox FontFamily="Segoe UI Light" FontSize="24" Margin="8"  Foreground="{StaticResource ResourceKey={control:Static Member=common:InfrastructureResourceLocator.mainforegroundbrushkey}}" HorizontalAlignment="Left" Grid.Row="1" IsChecked="{Binding PromptUserSelectionDialog,Mode=TwoWay}" Content="Prompt user to selected a preferred user for every action" Style="{StaticResource OptionsCheckBoxStyle}"/>

<Grid Margin="8" Grid.Row="2" HorizontalAlignment="Left">
	<Grid.RowDefinitions>
		<RowDefinition />
		<RowDefinition />
		<RowDefinition />
	</Grid.RowDefinitions>
	<Rectangle  Grid.RowSpan="3" Fill="#A7000000" RadiusX="3" RadiusY="3"></Rectangle>
            <TextBlock Margin="4" Text="Retweet Style" FontFamily="Segoe UI Light" FontSize="24"  FontWeight="Thin" Foreground="WhiteSmoke"></TextBlock>
            <TextBlock Style="{StaticResource smalltext}"  Foreground="WhiteSmoke" TextAlignment="Center" Grid.Row="1" Width="350" Margin="5,5,5,5" HorizontalAlignment="Center">New retweet style copies the tweet and appends an RT to the original text while Old Retweets original text as is a.</TextBlock>

        <StackPanel Margin="4" Orientation="Horizontal" Grid.Row="2" >
                <RadioButton  FontFamily="Segoe UI Light" FontSize="14"  FontWeight="Thin" Foreground="{StaticResource ResourceKey={control:Static Member=common:InfrastructureResourceLocator.mainforegroundbrushkey}}" HorizontalAlignment="Left"  IsChecked="{Binding IsOldRetweetStyle,Mode=TwoWay}" Content="Old" Style="{StaticResource OptionsRadioButtonStyle}" />
                <RadioButton FontFamily="Segoe UI Light" Margin="2,0" IsChecked="True" FontSize="14"  Foreground="{StaticResource ResourceKey={control:Static Member=common:InfrastructureResourceLocator.mainforegroundbrushkey}}" Content="New" Style="{StaticResource OptionsRadioButtonStyle}"></RadioButton>
        </StackPanel></Grid>
		<StackPanel Orientation="Vertical" Grid.Row="3" Margin="8">
            <TextBlock Margin="0,0,2,0" FontFamily="Segoe UI Light" FontSize="16" Foreground="{StaticResource ResourceKey={control:Static Member=common:InfrastructureResourceLocator.mainforegroundbrushkey}}" >Maximum Number of Items in a Column </TextBlock>
        <ComboBox FontFamily="Segoe UI" FontSize="12" Width="300" Height="25"  FontWeight="Thin" Foreground="LightGray" HorizontalAlignment="Left"  ItemsSource="{Binding MaximumNumberOfItemsInASingleColumnAvailableOptions}" SelectedItem="{Binding SelectedMaxNumberOfItemsInASingleColumn, Mode=TwoWay}" Style="{StaticResource SlickComboBoxStyle}" HorizontalContentAlignment="Left"/>
        </StackPanel>
        <ListBox Grid.Row="4" Background="{x:Null}" Margin="8" FontFamily="Segoe UI Bold" Width="350" SelectedItem="{Binding SelectedPosition,Mode=TwoWay}"  ItemsSource="{Binding AvailablePositions}" ItemContainerStyle="{StaticResource LocationListBoxItemStyle}" BorderThickness="0" BorderBrush="{x:Null}" HorizontalAlignment="Left">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <toolkit:WrapPanel Orientation="Vertical" MaxHeight="400" HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
    </Grid>
</UserControl>
