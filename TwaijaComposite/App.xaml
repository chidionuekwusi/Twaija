<Application 
    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
    xmlns:customcontrols="clr-namespace:TwaijaComposite.Modules.Controls;assembly=TwaijaComposite.Modules.Controls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
     xmlns:control="clr-namespace:TwaijaComposite.Modules.Controls;assembly=TwaijaComposite.Modules.Controls"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" x:Class="TwaijaComposite.App"
    >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            	<ResourceDictionary Source="/Resources/Dictionaries/BaseButtonStyleAndControlTemplate.xaml"/>
                <!--<ResourceDictionary Source="/Resources/Dictionaries/MainbrushesDictionary.xaml"></ResourceDictionary>-->
            	<ResourceDictionary Source="Templates.xaml"/>
            	<ResourceDictionary Source="Themes/generic.xaml"/>				
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="TextBlock" x:Key="DefaultItemTextStyle">
                <Setter Property="FontFamily" Value="Segoe UI Semibold"></Setter>
                <Setter Property="FontSize" Value="12"></Setter>
                <Setter Property="TextWrapping" Value="Wrap"></Setter>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
            </Style>
            <SolidColorBrush x:Key="universaltextboxbackgroundkey" Color="#25000000" />
            <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolTip}">
                            <Border  Padding="5"    BorderBrush="{DynamicResource mainforegroundbrushkey}" BorderThickness="1.3"  Background="{DynamicResource mainbackgroundbrushkey}" CornerRadius="3" TextBlock.Foreground="{DynamicResource mainforegroundbrushkey}" >
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ProfilePopupStyle" TargetType="{x:Type Window}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border  x:Name="box"  Opacity="0" HorizontalAlignment="Center" BorderBrush="LightGray" BorderThickness="1.5" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource mainforegroundbrushkey}" Background="{DynamicResource mainbackgroundbrushkey}" CornerRadius="0,0,0,0" MinHeight="615" MinWidth="300" RenderTransformOrigin="0.5,0.5">
                            	<VisualStateManager.VisualStateGroups>
                            		<VisualStateGroup x:Name="ValidationStates"/>
                            	</VisualStateManager.VisualStateGroups>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <ei:CallMethodAction TargetObject="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" MethodName="overlay_MouseDown"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="box" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="box" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.5,0.5"/>
                                                    <SplinePointKeyFrame KeyTime="00:00:00.2000000" Value="0.5,0.5"/>
                                                    <SplinePointKeyFrame KeyTime="00:00:00.4500000" Value="0.5,0.5"/>
                                                </PointAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="box" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" KeySpline="0.5,0,0.5,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="box" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" KeySpline="0.5,0,0.5,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                                <Grid x:Name="grid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button   Background="Transparent" BorderBrush="Transparent" Style="{StaticResource CloseButtonStyle}"  >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:CallMethodAction TargetObject="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" MethodName="Button_Click_1"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <TextBlock Foreground="{DynamicResource mainforegroundbrushkey}"><Run Text="_"/></TextBlock>
                                        </Button>
                                        <Button  Background="Transparent" BorderBrush="Transparent" Style="{StaticResource CloseButtonStyle}" >
                                        	<i:Interaction.Triggers>
                                        		<i:EventTrigger EventName="Click">
                                        			<ei:CallMethodAction TargetObject="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" MethodName="Close"/>
                                        		</i:EventTrigger>
                                        	</i:Interaction.Triggers>
                                            <Path  x:Name="path2995" Fill="{DynamicResource mainforegroundbrushkey}" Width="9.5" Height="9.5" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Margin="0">
                                                <Path.Data>
                                                    <PathGeometry Figures="M 1.7941219 7.9657795 C 1.3656255 7.4739097 1.4682827 7.1926367 2.4226616 6.2436287 L 3.5633445 5.109365 2.4034012 3.9559495 C 1.3153287 2.8740004 1.2854357 2.7625428 1.9209514 2.1571067 2.5564669 1.5516708 2.6734619 1.5801487 3.8091647 2.616722 L 5.0198847 3.7217642 6.2306043 2.616722 C 7.3663078 1.5801487 7.4833021 1.5516708 8.1188175 2.1571067 8.7543335 2.7625428 8.7244404 2.8740004 7.6363683 3.9559495 L 6.4764251 5.109365 7.6363683 6.2627805 C 8.7244404 7.3447302 8.7543335 7.4561874 8.1188175 8.0616235 7.4833021 8.6670592 7.3663078 8.6385815 6.2306043 7.6020082 L 5.0198847 6.4969662 3.8931909 7.5253164 C 2.58045 8.7234745 2.4737076 8.7458736 1.7941219 7.9657795 z" FillRule="NonZero"/>
                                                </Path.Data>
                                            </Path>
                                        </Button>

                                    </StackPanel>
                                    <ContentPresenter Grid.Row="1" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Margin="15,15,15,15" />
                                    <!--<Button Cursor="Hand"  HorizontalAlignment="Right" Width="Auto"  VerticalAlignment="Top" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="{x:Null}" BorderThickness="0,0,0,0" Template="{StaticResource CloseButtonStyle}" Margin="15,15,15,15"/>-->
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent" />
            </Style>
            <Style x:Key="OptionsRadioButtonStyle" TargetType="{x:Type RadioButton}">
                <Setter Property="Background" Value="#FF448DCA"/>
                <Setter Property="Foreground" Value="#FF000000"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Padding" Value="4,0,0,0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                            <GradientStop Color="#FF718597" Offset="0.375"/>
                            <GradientStop Color="#FF617584" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                            <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup)[0].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="-5" KeySpline="0.49,0,0.49,1"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.467" Value="0">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <ElasticEase EasingMode="EaseOut"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
                                                <DoubleAnimation Duration="0" To="1.15" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup)[0].(TranslateTransform.Y)" Storyboard.TargetName="grid1" />
                                                <DoubleAnimation Duration="0" To="1.15" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup)[0].(TranslateTransform.Y)" Storyboard.TargetName="grid1" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused"/>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid"/>
                                        <VisualState x:Name="InvalidUnfocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="InvalidFocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <System:Boolean>True</System:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="grid1" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse x:Name="BoxMiddle" StrokeThickness="2">
                                        <Ellipse.Stroke>
                                            <RadialGradientBrush>
                                                <GradientStop Color="White" Offset="0.961"/>
                                                <GradientStop Color="Black" Offset="0.668"/>
                                                <GradientStop Color="Black" Offset="0.996"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Ellipse x:Name="CheckIcon" Height="8" Opacity="0" Width="8">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <GradientStop Color="White" Offset="0"/>
                                                <GradientStop Color="#FF979797" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Opacity="0" Width="14"/>
                                    <Grid x:Name="ValidationErrorElement" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                        <ToolTipService.ToolTip>
                                            <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                                <ToolTip.Triggers>
                                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <System:Boolean>true</System:Boolean>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </ToolTip.Triggers>
                                            </ToolTip>
                                        </ToolTipService.ToolTip>
                                        <Ellipse Height="14" Stroke="#FFDB000C" StrokeThickness="1" Width="14"/>
                                        <Ellipse Fill="#FFDB000C" HorizontalAlignment="Right" Height="4" Margin="0,-2,-1,0" VerticalAlignment="Top" Width="4"/>
                                        <Ellipse Fill="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-5,-4,0" VerticalAlignment="Top" Width="10"/>
                                    </Grid>
                                </Grid>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="smalltext">
                <Setter Property="FontFamily" Value="Segoe UI Bold"/>
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="FontSize" Value="12"/>
            </Style>
            <ControlTemplate x:Key="ValidationToolTipTemplate">
                <Grid x:Name="Root"  Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                    <Grid.RenderTransform>
                        <TranslateTransform x:Name="xform" X="-25"/>
                    </Grid.RenderTransform>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="OpenStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0"/>
                                <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                    </Storyboard>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Closed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                    <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                    <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                    <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                    <Border Background="#FFDC000C" CornerRadius="2"/>
                    <Border CornerRadius="2">
                        <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
                    </Border>
                </Grid>
            </ControlTemplate>
            <LinearGradientBrush x:Key="GlassEffectBrush" EndPoint="0.977,0.98" StartPoint="-0.001,0.009">
				<GradientStop Color="#79787575" Offset="0.095"/>
				<GradientStop Color="#58585858" Offset="0.806"/>
				<GradientStop Color="#72504F4F" Offset="0.228"/>
				<GradientStop Color="#55979797" Offset="0.34"/>
				<GradientStop Color="#4E5E5E5E" Offset="0.616"/>
				<GradientStop Color="#4A3F3F3F" Offset="0.711"/>
				<GradientStop Color="#5A919191" Offset="0.944"/>
				<GradientStop Color="#7ED8D8D8" Offset="0.46"/>
			</LinearGradientBrush>
			<SolidColorBrush Color="#FF4B4B4E" x:Key="ColumnItemsMainColor"/>
			<SolidColorBrush Color="#FF828790" x:Key="ColumnItemsBorderColor"/>
			<SolidColorBrush Color="WhiteSmoke" x:Key="PathButtonTemplate15x15DefaultBrushKey"/>
            <SolidColorBrush Color="DarkGray" x:Key="PathButtonTemplate15x15HighlightBrushKey"/>
			<SolidColorBrush x:Key="HighlightPurpleColorBrush" Color="#FFC60466"/>
			<SolidColorBrush x:Key="DefaultPurpleColorBrush" Color="#FF680034"/>
			<SolidColorBrush x:Key="HorizontalScrollBarBackground" Color="#645F5E5E"/>
			<SolidColorBrush x:Key="VerticalScrollBarBackground" Color="#645F5E5E"/>  
        	<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
			<SolidColorBrush Color="#7EFFFFFF" x:Key="LightGrayHiglightBrush"/>
			<SolidColorBrush Color="#A0000000" x:Key="DarkGrayHighlightBrush" />
			<SolidColorBrush Color="#CCFFFFFF" x:Key="ThumbHighlightBrush" />
            <SolidColorBrush x:Key="FilterMainColorBrush" Color="#006E6C6C"/>
            <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            	<GradientStop Color="#ABADB3" Offset="0.05"/>
            	<GradientStop Color="#E2E3EA" Offset="0.07"/>
            	<GradientStop Color="#E3E9EF" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonHighlightBrush" Color="#7EFFFFFF" />
            <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
			<SolidColorBrush x:Key="NoTrackVerticalScrollBarBackground" Color="Transparent"/>
            <SolidColorBrush x:Key="MainBackgroundBrush" Color="#FF252525"/>
			<SolidColorBrush x:Key="NoTrackHorizontalScrollBarBackground" Color="Transparent"/>
			<SolidColorBrush x:Key="CriteriaNameBrush" Color="#00000000"/>
            <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#F3F3F3" Offset="0"/>
				<GradientStop Color="#EBEBEB" Offset="0.5"/>
				<GradientStop Color="#DDDDDD" Offset="0.5"/>
				<GradientStop Color="#CDCDCD" Offset="1"/>
			</LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
            <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#008C8E94"/>
			<Style x:Key="TweetUserControlStyle" TargetType="{x:Type UserControl}">
                <!--<Setter Property="Background" Value="{DynamicResource tweetbackgroundbrushkey}"/>-->
                <Setter Property="Foreground" Value="{DynamicResource columnitemforegroundbrushkey}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type UserControl}">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="#10FFFFFF"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
				<Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}"/>
				<Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource ButtonNormalBorder}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
								<Path x:Name="path" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Data="m 7.4716983 24.627441 c 0 -1.220611 -0.608898 -1.455584 -2.525436 -0.974564 -2.301421 0.57762 -2.469212 0.409829 -1.891592 -1.891592 0.48102 -1.916538 0.246047 -2.525436 -0.974564 -2.525436 -0.884625 0 -1.60840802 -0.675 -1.60840802 -1.5 0 -0.825 0.70328602 -1.5 1.56285802 -1.5 1.046774 0 1.459547 -0.742991 1.25 -2.25 -0.254379 -1.829432 0.10771 -2.191521 1.937142 -1.937142 1.507009 0.209547 2.25 -0.203226 2.25 -1.25 0 -0.8595717 0.675 -1.5628579 1.5 -1.5628579 0.825 0 1.4999997 0.7032862 1.4999997 1.5628579 0 1.046774 0.742991 1.459547 2.25 1.25 1.829432 -0.254379 2.191521 0.10771 1.937142 1.937142 -0.209547 1.507009 0.203226 2.25 1.25 2.25 0.859572 0 1.562858 0.675 1.562858 1.5 0 0.825 -0.723784 1.5 -1.608408 1.5 -1.220611 0 -1.455584 0.608898 -0.974564 2.525436 0.57762 2.301421 0.409829 2.469212 -1.891592 1.891592 -1.916538 -0.48102 -2.525436 -0.246047 -2.525436 0.974564 0 0.884624 -0.6749997 1.608408 -1.4999997 1.608408 -0.825 0 -1.5 -0.723784 -1.5 -1.608408 z m 3.9999997 -6.891592 c 0 -2 -0.5 -2.5 -2.4999997 -2.5 -2 0 -2.5 0.5 -2.5 2.5 0 2 0.5 2.5 2.5 2.5 1.9999997 0 2.4999997 -0.5 2.4999997 -2.5 z m 5.875 -4.8 c -0.06875 -0.385 -0.18125 -1.2625 -0.25 -1.95 -0.06875 -0.6875 -0.6875 -1.3062499 -1.375 -1.3749999 -2.49304 -0.249304 -2.630751 -0.3942489 -1.473794 -1.5512064 0.858922 -0.8589215 0.879843 -1.5333034 0.07756 -2.5 -1.094453 -1.3187298 -0.977147 -1.4614555 1.396234 -1.6987936 0.6875 -0.06875 1.30625 -0.6875 1.375 -1.375 0.237338 -2.37338054 0.380064 -2.49068684 1.698794 -1.3962383 0.966696 0.8022869 1.641078 0.7813662 2.5 -0.077555 1.156957 -1.15695754 1.301902 -1.01924614 1.551206 1.4737936 0.06875 0.6875 0.6875 1.30625 1.375 1.375 2.373381 0.2373381 2.490687 0.3800638 1.396238 1.6987936 -0.802287 0.9666966 -0.781366 1.6410785 0.07756 2.5 1.156953 1.1569575 1.019242 1.3019024 -1.473798 1.5512064 -0.6875 0.06875 -1.30625 0.6874996 -1.375 1.3749996 -0.237338 2.373381 -0.380064 2.490687 -1.698794 1.396238 -0.966696 -0.802287 -1.641078 -0.781366 -2.5 0.07756 -0.646913 0.646909 -1.232456 0.861202 -1.301206 0.476202 z M 21.35135 5.5908392 C 20.479919 4.5408283 19.876699 4.4847649 18.826688 5.3561966 17.776677 6.2276283 17.720614 6.830848 18.592046 7.880859 c 0.871431 1.0500109 1.474651 1.1060743 2.524662 0.2346426 1.050011 -0.8714317 1.106074 -1.4746514 0.234642 -2.5246624 z" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Fill="#6E000000" Stroke="Black" Height="16.236" Stretch="Fill" Width="16.23"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Fill" TargetName="path" Value="#6EFFFFFF"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Opacity" TargetName="path" Value="0.6"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="#ADADAD"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		    <Style x:Key="StandardTextButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
			    <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource mainforegroundbrushkey}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource mainforegroundbrushkey}"/>
            <Style.Triggers>
            	<Trigger Property="IsMouseOver" Value="True">
            		<Setter Property="Foreground" Value="DarkGray"/>
            		<Setter Property="Background" Value="LightGray"/>
            	</Trigger>
            </Style.Triggers>
        </Style>
            <Style x:Key="PinTextBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
				<Setter Property="FontFamily" Value="Segoe UI Light"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
            	<Setter Property="BorderThickness" Value="2"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="AllowDrop" Value="true"/>
            	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type TextBox}">
            				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"   SnapsToDevicePixels="true">
            					<ScrollViewer x:Name="PART_ContentHost"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            				</Border>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style x:Key="PopupStyle" TargetType="{x:Type Window}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Border x:Name="overlay" Background="Transparent" Padding="0"  Opacity="0" >
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="overlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="box" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                    <SplinePointKeyFrame KeyTime="00:00:00" Value="0.5,0.5"/>
                                                    <SplinePointKeyFrame KeyTime="00:00:00.2000000" Value="0.5,0.5"/>
                                                    <SplinePointKeyFrame KeyTime="00:00:00.4000000" Value="0.5,0.5"/>
                                                </PointAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="box" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" KeySpline="0.5,0,0.5,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="box" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" KeySpline="0.5,0,0.5,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                                <Border x:Name="box" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent"   RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <Grid x:Name="grid">
                                      
                                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center" Margin="15,15,15,15" />
                                        <!--<Button Cursor="Hand"  HorizontalAlignment="Right" Width="Auto"  VerticalAlignment="Top" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="{x:Null}" BorderThickness="0,0,0,0"  Margin="15,15,15,15"/>-->
                                    </Grid>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>
            <Style x:Key="WindowStyle" TargetType="{x:Type Window}" >
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ContentPresenter/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
							<Grid Background="Blue">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
							<ContentPresenter ContentSource="Icon"/>
							<ContentPresenter ContentSource="Header" Grid.Column="1"/>
							</Grid>
							
						</ControlTemplate>		
        	<ControlTemplate x:Key="SlickScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
        		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="*"/>
        				<ColumnDefinition Width="Auto"/>
        			</Grid.ColumnDefinitions>
        			<Grid.RowDefinitions>
        				<RowDefinition Height="*"/>
        				<RowDefinition Height="Auto"/>
        			</Grid.RowDefinitions>
        			<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
        			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
        			<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource SlickVerticalScrollBarStyle}"/>
                    <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource SlickVerticalScrollBarStyle}"/>
        		</Grid>
        	</ControlTemplate>
        	<ControlTemplate x:Key="NoTrackScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
        		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="*"/>
        				<ColumnDefinition Width="Auto"/>
        			</Grid.ColumnDefinitions>
        			<Grid.RowDefinitions>
        				<RowDefinition Height="*"/>
        				<RowDefinition Height="Auto"/>
        			</Grid.RowDefinitions>
        			<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
        			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
        			<ScrollBar   x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource NoTrackVerticalScrollBarStyle}"/>
                    <ScrollBar   x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource NoTrackVerticalScrollBarStyle}"/>
        		</Grid>
        	</ControlTemplate>
			    <ControlTemplate x:Key="NoTrackScrollInnerScrollBarViewerTemplate" TargetType="{x:Type ScrollViewer}">
        		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="*"/>
        				<ColumnDefinition Width="Auto"/>
        			</Grid.ColumnDefinitions>
        			<Grid.RowDefinitions>
        				<RowDefinition Height="*"/>
        				<RowDefinition Height="Auto"/>
        			</Grid.RowDefinitions>
        			<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
        			<ScrollContentPresenter  x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
        			<ScrollBar  x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource NoTrackVerticalScrollBarStyle}"/>
                    <ScrollBar HorizontalAlignment="Center" x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource NoTrackVerticalScrollBarStyle}" />
        		</Grid>
        	</ControlTemplate>
        	<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        		<Setter Property="OverridesDefaultStyle" Value="true"/>
        		<Setter Property="Focusable" Value="false"/>
        		<Setter Property="IsTabStop" Value="false"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type RepeatButton}">
        					<Microsoft_Windows_Themes:ScrollChrome   x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
			<Style x:Key="CustomScrollBarButton" TargetType="{x:Type RepeatButton}">
        		<Setter Property="OverridesDefaultStyle" Value="true"/>
        		<Setter Property="Focusable" Value="false"/>
        		<Setter Property="IsTabStop" Value="false"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type RepeatButton}">
        					<Path x:Name="glyph" StrokeLineJoin="Round" Margin="0" Stroke="{x:Null}" Fill="DarkGray"  HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
        					<ControlTemplate.Triggers>
        						<Trigger Property="Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph"  Value="UpArrow">
        							<Setter Property="Data" TargetName="glyph" Value="F1 M 3.81566,0L 0,8.32489L 7.63132,8.32489L 3.81566,0 Z "/>						
								</Trigger>	
								<Trigger Property="Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph"  Value="DownArrow">
        							<Setter Property="Data" TargetName="glyph" Value="F1 M 3.81566,8.32477L 0,-6.10352e-005L 7.63132,-6.10352e-005L 3.81566,8.32477 Z "/>						
								</Trigger>
								<Trigger Property="Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph"  Value="LeftArrow">
        							<Setter Property="Data" TargetName="glyph" Value="F1 M 0,3.81563L 8.32483,7.63131L 8.32483,-4.19617e-005L 0,3.81563 Z "/>						
								</Trigger>
								<Trigger Property="Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph"  Value="RightArrow">
        							<Setter Property="Data" TargetName="glyph" Value="F1 M 8.32483,3.81563L 0,7.63131L 0,-4.19617e-005L 8.32483,3.81563 Z "/>						
								</Trigger>				
							</ControlTemplate.Triggers>
							<!--<Border x:Name="Chrome"  SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>-->
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        		<Setter Property="OverridesDefaultStyle" Value="true"/>
        		<Setter Property="Background" Value="Transparent"/>
        		<Setter Property="Focusable" Value="false"/>
        		<Setter Property="IsTabStop" Value="false"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type RepeatButton}">
        					<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        		<Setter Property="OverridesDefaultStyle" Value="true"/>
        		<Setter Property="IsTabStop" Value="false"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Thumb}">
							<Rectangle x:Name="box" Fill="{StaticResource LightGrayHiglightBrush}" Stroke="{StaticResource LightGrayHiglightBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"/>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="box" Property="Stroke" Value="{StaticResource ThumbHighlightBrush}"/>
									<Setter TargetName="box" Property="Fill" Value="{StaticResource ThumbHighlightBrush}"/>
								</Trigger>
							</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>           
        	<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        		<Setter Property="OverridesDefaultStyle" Value="true"/>
        		<Setter Property="Background" Value="Transparent"/>
        		<Setter Property="Focusable" Value="false"/>
        		<Setter Property="IsTabStop" Value="false"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type RepeatButton}">
        					<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="SlickVerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        		<Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
        		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="Width" Value="10"/>
        		<Setter Property="MinWidth" Value="10"/>
                
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ScrollBar}">
        					<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        						<Track  ViewportSize="NaN"  x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" >
        							<Track.DecreaseRepeatButton>
        								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
        							</Track.DecreaseRepeatButton>
        							<Track.IncreaseRepeatButton>
        								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
        							</Track.IncreaseRepeatButton>
        							<Track.Thumb>
        								<Thumb Style="{StaticResource ScrollBarThumb}" Height="45" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"></Thumb>
        							</Track.Thumb>
									<Track.Resources>
										<System:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">100</System:Double>
									</Track.Resources>
        						</Track>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        		<Style.Triggers>
        			<Trigger Property="Orientation" Value="Horizontal">
        				<Setter Property="Width" Value="Auto"/>
        				<Setter Property="MinWidth" Value="0"/>
        				<Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
        				<Setter Property="Template">
        					<Setter.Value>
        						<ControlTemplate TargetType="{x:Type ScrollBar}">
        							<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        								<!--<Grid.ColumnDefinitions>
        									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
        									<ColumnDefinition Width="0.00001*"/>
        									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
        								</Grid.ColumnDefinitions>-->
        								<!--<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>-->
        								<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
        									<Track.DecreaseRepeatButton>
        										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
        									</Track.DecreaseRepeatButton>
        									<Track.IncreaseRepeatButton>
        										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
        									</Track.IncreaseRepeatButton>
        									<Track.Thumb>
        										<Thumb Style="{StaticResource ScrollBarThumb}" MinWidth="20" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
        									</Track.Thumb>
        								</Track>
        								<!--<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>-->
        							</Grid>
        							<ControlTemplate.Triggers>
        								<Trigger Property="IsEnabled" Value="false">
        									<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
        								</Trigger>
        							</ControlTemplate.Triggers>
        						</ControlTemplate>
        					</Setter.Value>
        				</Setter>
        				<Setter Property="Height" Value="10"/>
        				<Setter Property="MinHeight" Value="10"/>
        			</Trigger>
        		</Style.Triggers>
        	</Style>
			<Style x:Key="NoTrackVerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        		<Setter Property="Background" Value="{StaticResource NoTrackVerticalScrollBarBackground}"/>
        		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="Width" Value="8"/>
        		<Setter Property="MinWidth" Value="8"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ScrollBar}">
        					<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        						<Grid.RowDefinitions>
        							<RowDefinition Height="*" />
									<RowDefinition Height="*" />					
								</Grid.RowDefinitions>
   <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource CustomScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
   <RepeatButton Grid.Row="1" VerticalAlignment="Bottom" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource CustomScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" />
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        		<Style.Triggers>
        			<Trigger Property="Orientation" Value="Horizontal">
        				<Setter Property="Width" Value="Auto"/>
        				<Setter Property="MinWidth" Value="0"/>
        				<Setter Property="Height" Value="8"/>
        				<Setter Property="MinHeight" Value="8"/>
        				<Setter Property="Background" Value="{StaticResource NoTrackHorizontalScrollBarBackground}"/>
        				<Setter Property="Template">
        					<Setter.Value>
        						<ControlTemplate TargetType="{x:Type ScrollBar}">
        							<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        								<Grid.ColumnDefinitions>
        									<ColumnDefinition Width="*" />
											<ColumnDefinition  Width="*" />						
										</Grid.ColumnDefinitions>
        								<RepeatButton Margin="0,0,0.5,0"  Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource CustomScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
        								<RepeatButton Margin="0.5,0,0,0" Grid.Column="1" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource CustomScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
        							</Grid>
        							<ControlTemplate.Triggers>
        								<Trigger Property="IsEnabled" Value="false">
        									<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
        								</Trigger>
        							</ControlTemplate.Triggers>
        						</ControlTemplate>
        					</Setter.Value>
        				</Setter>
        			</Trigger>
        		</Style.Triggers>
        	</Style>
        	<Style x:Key="EllipseButton" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
        		<Setter Property="Template" Value="{StaticResource EllipseButtonControlTemplate}" />
        		<Setter Property="Foreground" Value="Black"/>
        	</Style>
        	<ControlTemplate x:Key="TextButtonControlTemplate" TargetType="{x:Type Button}">
        		<Grid x:Name="Grid" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
        			<Rectangle StrokeThickness="1.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
        			<TextBlock  Padding="20,0" x:Name="Main_Content" Text="{TemplateBinding Content}" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" FontFamily="Segoe UI SemiLight" FontSize="10.667"/>
        		</Grid>
        		<ControlTemplate.Triggers>
        			<Trigger Property="IsEnabled" Value="False">
        				<Setter TargetName="Main_Content" Property="Foreground" Value="DarkGray"/>
        			</Trigger>
        			<Trigger Property="IsPressed" Value="True">
        				<Setter TargetName="Grid" Property="Opacity" Value="0.6"/>
        			</Trigger>
        		</ControlTemplate.Triggers>
        	</ControlTemplate>	
			<Style x:Key="PurpleTextButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Foreground" Value="{StaticResource DefaultPurpleColorBrush}"/>
				<Setter Property="BorderBrush" Value="{StaticResource DefaultPurpleColorBrush}"/>
				<Setter Property="Template" Value="{StaticResource TextButtonControlTemplate}"/>
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Foreground" Value="{StaticResource HighlightPurpleColorBrush}"/>
						<Setter Property="Background" Value="{StaticResource DefaultPurpleColorBrush}"/>
					</Trigger>
				</Style.Triggers>
			</Style>
                 <DataTemplate x:Key="PathButtonTemplate15x15">
                  <Button Width="15" Height="15" Margin="5,0" Command="{Binding BindsDirectlyToSource=True}" Cursor="Hand" x:Name="mybutton" ToolTip="{Binding Hint}">
                     <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="{StaticResource PathButtonTemplate15x15DefaultBrushKey}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid x:Name="grid" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                            <ContentPresenter x:Name="cp" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource PathButtonTemplate15x15HighlightBrushKey}"/>
                                            </Trigger>
                                            <Trigger SourceName="cp" Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource PathButtonTemplate15x15HighlightBrushKey}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <Path Stroke="{Binding Foreground, ElementName=mybutton}" Fill="{Binding Foreground, ElementName=mybutton}" Data="{Binding PathIcon}"/>
                </Button>
                <!---->
            </DataTemplate>
                 <DataTemplate x:Key="PathButtonTemplate15x15ForegroundAware">
                <Button Width="15" Cursor="Hand" Height="15" Margin="5,0" Command="{Binding BindsDirectlyToSource=True}" x:Name="mybutton" ToolTip="{Binding Hint}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="{DynamicResource mainforegroundbrushkey}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid x:Name="grid" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                            <ContentPresenter x:Name="cp" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch"></Rectangle>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource PathButtonTemplate15x15HighlightBrushKey}"/>
                                            </Trigger>
                                            <Trigger SourceName="cp" Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource PathButtonTemplate15x15HighlightBrushKey}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <Path Stroke="{Binding Foreground, ElementName=mybutton}" Fill="{Binding Foreground, ElementName=mybutton}" Data="{Binding PathIcon}"/>
                </Button>
                <!---->
            </DataTemplate>
            <Style x:Key="SlickListBox" TargetType="{x:Type ListBox}">
                <Setter Property="Template">
                    <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <control:GesturebasedScrollViewer Template="{StaticResource SlickScrollViewerTemplate}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <ItemsPresenter x:Name="itemsPresenter"/>
                        </control:GesturebasedScrollViewer>
                    </Border>
                </ControlTemplate></Setter.Value></Setter>
            </Style>
            <Style x:Key="SlickListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            	<Style.Resources>
            		<Storyboard x:Key="OnLoaded1">
            			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
            				<EasingDoubleKeyFrame KeyTime="0" Value="0.045"/>
            				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            			</DoubleAnimationUsingKeyFrames>
            		</Storyboard>
            	</Style.Resources>
            	<Style.Triggers>
            		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
            			<BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
            		</EventTrigger>
            	</Style.Triggers>
            	<Setter Property="Background" Value="Transparent"/>
            	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            	<Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0,4,0,4"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ListBoxItem}">
            				<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates"/>
            						<VisualStateGroup x:Name="SelectionStates"/>
            						<VisualStateGroup x:Name="FocusStates"/>
            						<VisualStateGroup x:Name="ValidationStates"/>
            					</VisualStateManager.VisualStateGroups>
            				</ContentPresenter>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsSelected" Value="true"/>
            					<MultiTrigger>
            						<MultiTrigger.Conditions>
            							<Condition Property="IsSelected" Value="true"/>
            							<Condition Property="Selector.IsSelectionActive" Value="false"/>
            						</MultiTrigger.Conditions>
            					</MultiTrigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="RegionStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            </Style>
            <Style x:Key="CriterionListboxStyle" TargetType="{x:Type ListBox}">
            	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ListBox}">
            				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
            					<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{DynamicResource NoTrackScrollViewerTemplate}">
            						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            					</ScrollViewer>
            				</Border>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            					</Trigger>
            					<Trigger Property="IsGrouping" Value="true">
            						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="DialogTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Width" Value="350" />
            	<Setter Property="TextWrapping" Value="Wrap"/>
            	<Setter Property="TextTrimming" Value="None"/>
				<Setter Property="FontFamily" Value="Segoe UI SemiLight" />
				<Setter Property="FontSize" Value="14" />
				<Setter Property="Foreground" Value="{DynamicResource mainforegroundbrushkey}" />
            </Style>
            <Style x:Key="ButtonFocusVisual">
            	<Setter Property="Control.Template">
            		<Setter.Value>
            			<ControlTemplate>
            				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="PathBasedButton" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
            	<Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}"/>
            	<Setter Property="Background" Value="{x:Null}"/>
            	<Setter Property="BorderBrush" Value="{x:Null}"/>
            	<Setter Property="BorderThickness" Value="0"/>
            	<Setter Property="Foreground" Value="{DynamicResource ResourceKey=mainbuttonbackgroundbrushkey}"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="True">
            						<Setter Property="Opacity" Value="0.5"/>
            						</Trigger>
            					<Trigger Property="IsKeyboardFocused" Value="true"/>
            					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Foreground" Value="#ADADAD"/>
									<Setter Property="Opacity" Value="0.4" />
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
           
            <Style x:Key="SlickTabControlStyle" TargetType="{x:Type TabControl}">
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="Padding" Value="4,4,4,4"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            	<Setter Property="Background" Value="Blue"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type TabControl}">
            				<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
            					<Grid.ColumnDefinitions>
            						<ColumnDefinition x:Name="ColumnDefinition0"/>
            						<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            					</Grid.ColumnDefinitions>
            					<Grid.RowDefinitions>
            						<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
            						<RowDefinition x:Name="RowDefinition1" Height="*"/>
            					</Grid.RowDefinitions>
            					<TabPanel x:Name="HeaderPanel"  Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
            					<Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                    <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                    <Grid x:Name="AnimationContentPresenter">
            						<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            					    </Grid>
                                        </ScrollViewer>
                                    </Border>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="PART_SelectedContentHost"/>
            					<Trigger Property="TabStripPlacement" Value="Bottom">
            						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
            						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
            						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
            						<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
            						<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
            					</Trigger>
            					<Trigger Property="TabStripPlacement" Value="Left">
            						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
            						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
            						<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
            						<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
            						<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
            						<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
            						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
            						<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
            						<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
            					</Trigger>
            					<Trigger Property="TabStripPlacement" Value="Right">
            						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
            						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
            						<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
            						<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
            						<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
            						<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
            						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
            						<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
            						<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
              <Style x:Key="ProfileTabControlStyle" TargetType="{x:Type TabControl}">
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="Padding" Value="4,4,4,4"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            	<Setter Property="Background" Value="Blue"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type TabControl}">
            				<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
            					<Grid.ColumnDefinitions>
            						<ColumnDefinition x:Name="ColumnDefinition0"/>
            						<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            					</Grid.ColumnDefinitions>
            					<Grid.RowDefinitions>
            						<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
            						<RowDefinition x:Name="RowDefinition1" Height="*"/>
            					</Grid.RowDefinitions>
            					<TabPanel x:Name="HeaderPanel"  Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
            					<Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                 
                                    <Grid x:Name="AnimationContentPresenter">
            						<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            					    </Grid>
                                  
                                    </Border>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="PART_SelectedContentHost"/>
            					<Trigger Property="TabStripPlacement" Value="Bottom">
            						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
            						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
            						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
            						<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
            						<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
            					</Trigger>
            					<Trigger Property="TabStripPlacement" Value="Left">
            						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
            						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
            						<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
            						<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
            						<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
            						<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
            						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
            						<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
            						<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
            					</Trigger>
            					<Trigger Property="TabStripPlacement" Value="Right">
            						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
            						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
            						<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
            						<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
            						<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
            						<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
            						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
            						<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
            						<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="TabItemFocusVisual">
            	<Setter Property="Control.Template">
            		<Setter.Value>
            			<ControlTemplate>
            				<Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="Transparent"/>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
            	<GradientStop Color="#EAF6FD" Offset="0.15"/>
            	<GradientStop Color="#D9F0FC" Offset=".5"/>
            	<GradientStop Color="#BEE6FD" Offset=".5"/>
            	<GradientStop Color="#A7D9F5" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
            <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
            <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
            <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
            <DataTemplate x:Key="TabItemDataTemplate">
            	<Grid x:Name="grid" >
            		<TextBlock x:Name="textheader" Text="{Binding Header}"/>
            	</Grid>
            </DataTemplate>
            <Style x:Key="SlickTabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="ToolTip" Value="Click to view info" />
                <Setter Property="Cursor" Value="Hand" />
            	<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
            	<Setter Property="Foreground" Value="{DynamicResource mainforegroundbrushkey}"/>
            	<Setter Property="Padding" Value="6,1,6,1"/>
            	<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            	<Setter Property="Background" Value="{x:Null}"/>
            	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type TabItem}">
            				<Grid SnapsToDevicePixels="true">
            					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            						<ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            					</Border>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource maincoloralternate}"/>
            						<Setter Property="Opacity" TargetName="Bd" Value="0.495"/>
            						<Setter Property="TextBlock.Foreground" TargetName="Bd" Value="{DynamicResource maincoloralternateforeground}" />
            					</Trigger>
            					<Trigger Property="IsSelected" Value="true">
            						<Setter Property="Panel.ZIndex" Value="1"/>
            						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource maincoloralternate}"/>
            						<Setter Property="TextBlock.Foreground" TargetName="Bd" Value="{DynamicResource maincoloralternateforeground}"/>
            					</Trigger>
            					<MultiTrigger>
            						<MultiTrigger.Conditions>
            							<Condition Property="IsSelected" Value="false"/>
            							<Condition Property="IsMouseOver" Value="true"/>
            						</MultiTrigger.Conditions>
            						<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ThumbHighlightBrush}"/>
            					</MultiTrigger>
            					<Trigger Property="TabStripPlacement" Value="Bottom">
            						<Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
            					</Trigger>
            					<Trigger Property="TabStripPlacement" Value="Left">
            						<Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
            					</Trigger>
            					<Trigger Property="TabStripPlacement" Value="Right">
            						<Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
            					</Trigger>
            					<MultiTrigger>
            						<MultiTrigger.Conditions>
            							<Condition Property="IsSelected" Value="true"/>
            							<Condition Property="TabStripPlacement" Value="Top"/>
            						</MultiTrigger.Conditions>
            						<Setter Property="Margin" Value="-2,-2,-2,-1"/>
            						<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
            					</MultiTrigger>
            					<MultiTrigger>
            						<MultiTrigger.Conditions>
            							<Condition Property="IsSelected" Value="true"/>
            							<Condition Property="TabStripPlacement" Value="Bottom"/>
            						</MultiTrigger.Conditions>
            						<Setter Property="Margin" Value="-2,-1,-2,-2"/>
            						<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
            					</MultiTrigger>
            					<MultiTrigger>
            						<MultiTrigger.Conditions>
            							<Condition Property="IsSelected" Value="true"/>
            							<Condition Property="TabStripPlacement" Value="Left"/>
            						</MultiTrigger.Conditions>
            						<Setter Property="Margin" Value="-2,-2,-1,-2"/>
            						<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
            					</MultiTrigger>
            					<MultiTrigger>
            						<MultiTrigger.Conditions>
            							<Condition Property="IsSelected" Value="true"/>
            							<Condition Property="TabStripPlacement" Value="Right"/>
            						</MultiTrigger.Conditions>
            						<Setter Property="Margin" Value="-1,-2,-2,-2"/>
            						<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
            					</MultiTrigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
            						<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
            						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="ComboBoxFocusVisual">
            	<Setter Property="Control.Template">
            		<Setter.Value>
            			<ControlTemplate>
            				<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
            <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="IsTabStop" Value="false"/>
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="ClickMode" Value="Press"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}">
            					<Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            						<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
            					</Grid>
            				</Border>
            				<ControlTemplate.Triggers>
            					<!--<Trigger Property="IsChecked" Value="true">
            						<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            					</Trigger>-->
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
			<Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="3,0,3,0"/>
			<Setter Property="Background" Value="#80000000"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
				<Style.Triggers>
					<Trigger Property="IsHighlighted" Value="True"/>
				</Style.Triggers>
		</Style>
            <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="AllowDrop" Value="true"/>
            	<Setter Property="MinWidth" Value="0"/>
            	<Setter Property="MinHeight" Value="0"/>
            	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type TextBox}">
            				<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="IsTabStop" Value="false"/>
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="ClickMode" Value="Press"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            					<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
            				</Microsoft_Windows_Themes:ButtonChrome>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsChecked" Value="true">
            						<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            	<Grid x:Name="Placement" SnapsToDevicePixels="true">
            		<Grid.ColumnDefinitions>
            			<ColumnDefinition Width="*"/>
            			<ColumnDefinition Width="Auto"/>
            		</Grid.ColumnDefinitions>
            		<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
            			<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
            				<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            					<ScrollViewer x:Name="DropDownScrollViewer">
            						<Grid RenderOptions.ClearTypeHint="Enabled">
            							<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
            								<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
            							</Canvas>
            							<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            						</Grid>
            					</ScrollViewer>
            				</Border>
            			</Microsoft_Windows_Themes:SystemDropShadowChrome>
            		</Popup>
            		<Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
            		<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            		<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            	</Grid>
            	<ControlTemplate.Triggers>
            		<Trigger Property="IsKeyboardFocusWithin" Value="true">
            			<Setter Property="Foreground" Value="Black"/>
            		</Trigger>
            		<Trigger Property="IsDropDownOpen" Value="true">
            			<Setter Property="RenderFocused" TargetName="Border" Value="true"/>
            		</Trigger>
            		<Trigger Property="HasItems" Value="false">
            			<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            		</Trigger>
            		<Trigger Property="IsEnabled" Value="false">
            			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            			<Setter Property="Background" Value="#FFF4F4F4"/>
            		</Trigger>
            		<Trigger Property="IsGrouping" Value="true">
            			<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            		</Trigger>
            		<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
            			<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
            			<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            		</Trigger>
            		<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
            			<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
            			<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            		</Trigger>
            	</ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="SlickComboboxStyle" TargetType="{x:Type ComboBox}">
				<Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
            	<Setter Property="Foreground" Value="LightGray"/>
            	<Setter Property="Background" Value="Black"/>
            	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            	<Setter Property="Padding" Value="4,3"/>
            	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ComboBox}">
                                <ControlTemplate.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                </ControlTemplate.Resources>
            				<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates"/>
            						<VisualStateGroup x:Name="FocusStates"/>
            						<VisualStateGroup x:Name="EditStates"/>
            						<VisualStateGroup x:Name="ValidationStates"/>
            					</VisualStateManager.VisualStateGroups>
            					<Grid.ColumnDefinitions>
            						<ColumnDefinition Width="*"/>
            						<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            					</Grid.ColumnDefinitions>
            				
            					<ToggleButton  BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" BorderThickness="{TemplateBinding BorderThickness}"/>
									<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,0" PopupAnimation="Slide" Placement="Bottom" VerticalOffset="-5">
            						<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
            							<Border x:Name="DropDownBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}">
            								<ScrollViewer x:Name="DropDownScrollViewer">
            									<Grid RenderOptions.ClearTypeHint="Enabled">
            										<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
            											<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
            										</Canvas>
            										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            									</Grid>
            								</ScrollViewer>
            							</Border>
            						</Microsoft_Windows_Themes:SystemDropShadowChrome>
            					</Popup>
            					<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="true" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
            						<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
            						<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            					</Trigger>
            					<Trigger Property="HasItems" Value="false">
            						<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            						<Setter Property="Background" Value="#FFF4F4F4"/>
            					</Trigger>
            					<Trigger Property="IsGrouping" Value="true">
            						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            					</Trigger>
            					<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
            						<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
            						<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
                            </ControlTemplate>
            		</Setter.Value>
            	</Setter>
            	<Style.Triggers>
            		<Trigger Property="IsEditable" Value="true">
            			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
            			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            			<Setter Property="IsTabStop" Value="false"/>
            			<Setter Property="Padding" Value="3"/>
            			<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            		</Trigger>
            	</Style.Triggers>
            </Style>
           
                   </ResourceDictionary>
    </Application.Resources>
</Application>
