<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:common="clr-namespace:TwaijaComposite.Modules.Common;assembly=TwaijaComposite.Modules.Common"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:TwaijaComposite_Modules_Controls="clr-namespace:TwaijaComposite.Modules.Controls;assembly=TwaijaComposite.Modules.Controls" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
	<common:ButtonPathConverter x:Key="ButtonConverter" />
	<ControlTemplate x:Key="EllipseButtonControlTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="Grid" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" >
			<Ellipse x:Name="Ellipse" HorizontalAlignment="Stretch" Stroke="{DynamicResource LightGrayHiglightBrush}" VerticalAlignment="Stretch" StrokeThickness="1.5" />
			<ContentPresenter />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Stroke" TargetName="Ellipse" Value="{DynamicResource ThumbHighlightBrush}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Ellipse" Property="Stroke" Value="Gray"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter TargetName="Grid" Property="Opacity" Value="0.6"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="TwoStateButtonControlTemplate1" TargetType="{x:Type TwaijaComposite_Modules_Controls:TwoStateButton}">
		<!--<Grid x:Name="grid" Background="{x:Null}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="Looks">
					<VisualStateGroup.Transitions>
						<VisualTransition From="StateA" GeneratedDuration="0:0:1" To="StateB"/>
						<VisualTransition From="StateB" GeneratedDuration="0:0:1" To="StateA">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
									<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="path">
									<EasingPointKeyFrame KeyTime="0" Value="0,0"/>
									<EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
								</PointAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path">
									<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
									<SplineDoubleKeyFrame KeyTime="0:0:1" Value="-1" KeySpline="0.5,0,0.5,1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="StateB"/>
					<VisualState x:Name="StateA">
						<Storyboard/>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<VisualStateManager.CustomVisualStateManager>
				<ei:ExtendedVisualStateManager/>
			</VisualStateManager.CustomVisualStateManager>
			<Path x:Name="path"  HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1 M 8.32483,3.81563L 0,7.63131L 0,-4.19617e-005L 8.32483,3.81563 Z " Fill="#66020202" Stroke="{x:Null}">
				<Path.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Path.RenderTransform></Path></Grid>-->
        <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
        	<VisualStateManager.VisualStateGroups>
        		<VisualStateGroup x:Name="Looks"/>
        		<VisualStateGroup x:Name="CommonStates"/>
        		<VisualStateGroup x:Name="FocusStates"/>
        		<VisualStateGroup x:Name="ValidationStates"/>
        	</VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="rectangle"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#03000000" Stroke="Transparent"/>
        </Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Fill" TargetName="rectangle" Value="#1A9E9D9D"/>
			</Trigger>
		</ControlTemplate.Triggers>
        <!--<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Fill" TargetName="path" Value="{DynamicResource ButtonHighlightBrush}"/>

			</Trigger>
		</ControlTemplate.Triggers>-->
	</ControlTemplate>
	<Style x:Key="DropdownComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
		<Setter Property="Foreground" Value="LightGray"/>
		<Setter Property="Background" Value="Black"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Padding" Value="4,3"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<ControlTemplate.Resources>
						<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
					</ControlTemplate.Resources>
					<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates"/>
							<VisualStateGroup x:Name="FocusStates"/>
							<VisualStateGroup x:Name="EditStates"/>
							<VisualStateGroup x:Name="ValidationStates"/>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
						</Grid.ColumnDefinitions>
            				
						<ToggleButton  BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" BorderThickness="{TemplateBinding BorderThickness}">
							<TextBox x:Name="PART_EditableTextBox"/>
						</ToggleButton>
						<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,0" PopupAnimation="Slide" Placement="Bottom" VerticalOffset="-5">
							<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
								<Border x:Name="DropDownBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}">
									<ScrollViewer x:Name="DropDownScrollViewer">
										<Grid RenderOptions.ClearTypeHint="Enabled">
											<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
												<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
											</Canvas>
											<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</Grid>
									</ScrollViewer>
								</Border>
							</Themes:SystemDropShadowChrome>
						</Popup>
						<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="true" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							<Setter Property="Background" Value="#FFF4F4F4"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Padding" Value="3"/>
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
           
</ResourceDictionary>