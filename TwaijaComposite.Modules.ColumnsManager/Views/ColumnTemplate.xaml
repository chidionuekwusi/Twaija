<UserControl xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" 
    
    xmlns:models="clr-namespace:TwaijaComposite.Modules.ColumnsManager.Viewmodels"
    xmlns:views="clr-namespace:TwaijaComposite.Modules.ColumnsManager.Views"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:common="clr-namespace:TwaijaComposite.Modules.Common;assembly=TwaijaComposite.Modules.Common"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:behave="clr-namespace:TwaijaComposite.Modules.Common.Behaviors;assembly=TwaijaComposite.Modules.Common"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:controls="clr-namespace:TwaijaComposite.Modules.Controls;assembly=TwaijaComposite.Modules.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
             xmlns:main="clr-namespace:TwaijaComposite.Modules.ColumnsManager"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
             xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" x:Name="ColumnView" x:Class="TwaijaComposite.Modules.ColumnsManager.Views.ColumnTemplate"
             ClipToBounds="True" VerticalContentAlignment="Top"
    HorizontalContentAlignment="Stretch" Height="550"
             HorizontalAlignment="Stretch" VerticalAlignment="Top"
             mc:Ignorable="d" d:DesignWidth="500" RenderTransformOrigin="0.5,0.5"  >
	<UserControl.Resources>
        <Style x:Key="TwoStateButtonStyle1" TargetType="{x:Type controls:TwoStateButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#3E000000"/>
            <Setter Property="BorderBrush" Value="{DynamicResource mainforegroundbrushkey}"/>
            <Setter Property="Foreground" Value="{DynamicResource mainforegroundbrushkey}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:TwoStateButton}">
                        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Looks">
                                    <VisualState x:Name="StateB">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="180"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="StateA">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="ellipse" Fill="#7E000000" HorizontalAlignment="Stretch" Height="Auto" Margin="0" Stroke="{DynamicResource mainforegroundbrushkey}" VerticalAlignment="Stretch" StrokeThickness="1"/>
                            <TextBlock HorizontalAlignment="Center"  Margin="0" TextWrapping="Wrap" Text="^" VerticalAlignment="Center" Width="auto" FontFamily="Segoe UI Bold" FontSize="14" FontWeight="Bold" Foreground="{DynamicResource mainforegroundbrushkey}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="ellipse" Value="#7EFFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CommandPathButtonNavigation" TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#FF000000"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="main" >
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="contentPresenter"  To="0.25" Duration="00:00:0.2" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
                                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter">
                                                <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#FF8B8B8B" KeySpline="0.5,0,0.5,1"/>
                                            </ColorAnimationUsingKeyFrames>-->
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="main">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        Collapsed
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <!--<DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="main" To="0"></DoubleAnimation>-->
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path  Stretch="Fill" x:Name="contentPresenter" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Data="M 8.2021007 28.361475 C -3.1528233 22.548697 -2.5973294 6.1061016 9.1187893 1.2275206 21.671411 -3.9993793 34.106091 8.3928145 28.861271 20.902547 25.470026 28.991208 16.065272 32.386764 8.2021007 28.361475 z M 23.822473 23.792866 c 3.274628 -3.263439 4.215022 -5.220494 4.215022 -8.771883 0 -3.551389 -0.940394 -5.5084437 -4.215022 -8.7718814 -5.864365 -5.84432839 -11.739546 -5.84432839 -17.6039118 0 -5.86436534 5.8443284 -5.86436534 11.6994354 0 17.5437644 5.8643658 5.844327 11.7395468 5.844327 17.6039118 0 z M 9.6579121 18.956654 C 6.2556324 15.347466 6.2795985 14.237748 9.8316411 10.912177 13.581253 7.4016355 16.939426 7.2185034 13.780805 10.696816 c -2.213315 2.43733 -2.165322 2.470953 3.526995 2.470953 4.303166 0 5.770846 0.471323 5.770846 1.853214 0 1.381893 -1.46768 1.853215 -5.770846 1.853215 -5.692317 0 -5.74031 0.03362 -3.526995 2.470953 3.346173 3.684846 -0.636869 3.309526 -4.1228929 -0.388497 z"
  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  UseLayoutRounding="False" Fill="{DynamicResource ResourceKey=mainbuttonbackgroundbrushkey}">
                            </Path>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Opacity="0.5"></Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="TreeViewItemContainerStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <common:UIStringConverter x:Key="UIStringConverter"/>
		<!--<main:ColumnHeaderColorConverter />-->
        <common:RandomColorConverter x:Key="headerColorConverter"></common:RandomColorConverter>
		<ItemsPanelTemplate x:Key="HorizontalItemsPanelTemplate">
			<VirtualizingStackPanel IsItemsHost="True" CanHorizontallyScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Orientation="Horizontal"/>
		</ItemsPanelTemplate>
		<Style x:Key="ButtonFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#F3F3F3" Offset="0"/>
			<GradientStop Color="#EBEBEB" Offset="0.5"/>
			<GradientStop Color="#DDDDDD" Offset="0.5"/>
			<GradientStop Color="#CDCDCD" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
		<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:1" To="MouseOver">
											<ei:ExtendedVisualStateManager.TransitionEffect>
												<ee:WipeTransitionEffect/>
											</ei:ExtendedVisualStateManager.TransitionEffect>
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Chrome">
													<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
													<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.49"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<VisualStateManager.CustomVisualStateManager>
								<ei:ExtendedVisualStateManager/>
							</VisualStateManager.CustomVisualStateManager>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Microsoft_Windows_Themes:ButtonChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="true">
								<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="#590E0D0D"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Height="Auto" Margin="5,-0.25,0.25,-5.25" Width="{TemplateBinding Width}" Padding="{TemplateBinding Padding}">
							<Path  Name="path2995" Fill="{TemplateBinding Foreground}" Width="9.5" Height="9.5" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Fill" Margin="4.25,3.25,0,0"><Path.Data><PathGeometry Figures="M 1.7941219 7.9657795 C 1.3656255 7.4739097 1.4682827 7.1926367 2.4226616 6.2436287 L 3.5633445 5.109365 2.4034012 3.9559495 C 1.3153287 2.8740004 1.2854357 2.7625428 1.9209514 2.1571067 2.5564669 1.5516708 2.6734619 1.5801487 3.8091647 2.616722 L 5.0198847 3.7217642 6.2306043 2.616722 C 7.3663078 1.5801487 7.4833021 1.5516708 8.1188175 2.1571067 8.7543335 2.7625428 8.7244404 2.8740004 7.6363683 3.9559495 L 6.4764251 5.109365 7.6363683 6.2627805 C 8.7244404 7.3447302 8.7543335 7.4561874 8.1188175 8.0616235 7.4833021 8.6670592 7.3663078 8.6385815 6.2306043 7.6020082 L 5.0198847 6.4969662 3.8931909 7.5253164 C 2.58045 8.7234745 2.4737076 8.7458736 1.7941219 7.9657795 z" FillRule="NonZero"/></Path.Data></Path>
						</Border>						
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
							<Trigger  Property="IsMouseOver" Value="True">
								<Setter  TargetName="path2995" Property="Fill" Value="{StaticResource ButtonHighlightBrush}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Key="SwingHeaderGradient">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
				<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="1" KeySpline="0.5,0.5,0.5,0.5"/>
				<SplineDoubleKeyFrame KeyTime="0:0:1" Value="1" KeySpline="0.5,0,0.5,1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
				<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0.477" KeySpline="0.5,0.5,0.5,0.5"/>
				<SplineDoubleKeyFrame KeyTime="0:0:1" Value="0.918" KeySpline="0.5,0,0.5,1"/>
			</DoubleAnimationUsingKeyFrames>
			<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="rectangle">
				<SplineColorKeyFrame KeyTime="0:0:0.6" Value="#FF393737" KeySpline="0.5,0.5,0.5,0.5"/>
				<SplineColorKeyFrame KeyTime="0:0:1" Value="#FF212121" KeySpline="0.5,0,0.5,1"/>
			</ColorAnimationUsingKeyFrames>
			<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle">
				<SplineColorKeyFrame KeyTime="0:0:0.6" Value="#FF707070" KeySpline="0.5,0.5,0.5,0.5"/>
				<SplineColorKeyFrame KeyTime="0:0:1" Value="#FF212121" KeySpline="0.5,0,0.5,1"/>
			</ColorAnimationUsingKeyFrames>
			<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle">
				<SplineColorKeyFrame KeyTime="0:0:0.6" Value="#FF474545" KeySpline="0.5,0.5,0.5,0.5"/>
				<SplineColorKeyFrame KeyTime="0:0:1" Value="#FF0E0D0D" KeySpline="0.5,0,0.5,1"/>
			</ColorAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="rectangle">
				<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0" KeySpline="0.5,0.5,0.5,0.5"/>
				<SplineDoubleKeyFrame KeyTime="0:0:1" Value="0.08" KeySpline="0.5,0,0.5,1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<ContentPresenter  >
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates"/>
								<VisualStateGroup x:Name="FocusStates"/>
								<VisualStateGroup x:Name="SelectionStates"/>
								<VisualStateGroup x:Name="ExpansionStates"/>
								<VisualStateGroup x:Name="HasItemsStates"/>
								<VisualStateGroup x:Name="ValidationStates"/>
							</VisualStateManager.VisualStateGroups>
						</ContentPresenter>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="IsExpanded" Value="True"/>
      
		</Style>
		<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
		<Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeView}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ScrollViewer Template="{DynamicResource SlickScrollViewerTemplate}" x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" >
								<ItemsPresenter/>
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							</Trigger>
							<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
								<Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel/>
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="swiftContainerStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle">
				<Setter.Value>
					<Style>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnLoaded1">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd">
									<EasingDoubleKeyFrame KeyTime="0" Value="0.045"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates"/>
								<VisualStateGroup x:Name="SelectionStates"/>
								<VisualStateGroup x:Name="FocusStates"/>
								<VisualStateGroup x:Name="ValidationStates"/>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="FrameworkElement.Loaded">
								<BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
							</EventTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#1F26A0DA"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#A826A0DA"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="False"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#3DDADADA"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="True"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


	</UserControl.Resources>

	<UserControl.RenderTransform>
		<TransformGroup>
			<ScaleTransform/>
			<SkewTransform/>
			<RotateTransform/>
			<TranslateTransform/>
		</TransformGroup>
	</UserControl.RenderTransform>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <i:Interaction.Behaviors>
            <ei:DataStateBehavior Binding="{Binding IsMainView}" TrueState="MainRegion" FalseState="SecondaryRegion" Value="True"/>
        </i:Interaction.Behaviors>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualizationStates">
                <VisualStateGroup.Transitions>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="MainRegion">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="secondary">
                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="-365" KeySpline="0,1,0,1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="main">
                            <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="0" KeySpline="0,1,0,1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="SecondaryRegion" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="secondary">
                            <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="0" KeySpline="0,1,0,1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="main">
                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="365" KeySpline="0,1,0,1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
    		<RowDefinition Height="80"/>
    		<RowDefinition Height="40"/>
            <RowDefinition Height="auto" />
            <RowDefinition MaxHeight="430"  Height="*" />
    	</Grid.RowDefinitions>
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition Width="217"/>
    		<ColumnDefinition Width="115"/>
    		<!--<ColumnDefinition Width="*"/>-->
    	</Grid.ColumnDefinitions>
        <!--<Rectangle HorizontalAlignment="Stretch" Margin="-0.5,0.5,0.5,-0.5" Stroke="#66000000" VerticalAlignment="Stretch" Grid.RowSpan="2" Grid.ColumnSpan="2">
        </Rectangle>-->
        <Rectangle Fill="{Binding Header, Converter={StaticResource headerColorConverter}}" Stroke="#66000000" Margin="0.5" StrokeThickness="0" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
        <Rectangle HorizontalAlignment="Stretch" Grid.RowSpan="2" Margin="0.5" Grid.ColumnSpan="2" VerticalAlignment="Stretch">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#4CBBBBBB" Offset="0"/>
                    <GradientStop Color="#19343434" Offset="0.949"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
       
    	 
    	<TextBlock Margin="6,6,0,0"  VerticalAlignment="Top" TextWrapping="Wrap" ToolTip="{Binding Header}" Text="{Binding Header, ConverterParameter={x:Static common:UIStringConverterType.ColumnHeader}, Converter={StaticResource UIStringConverter}}" FontFamily="Segoe UI Semibold" FontSize="20"  Foreground="#FF252525">
    	</TextBlock>
        <Grid Grid.ColumnSpan="2" Grid.Row="1" Margin="2,0" x:Name="canvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        	<Grid x:Name="AreaA" Background="Transparent"    Height="35" VerticalAlignment="Center"  HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition  Width="auto" />
                </Grid.ColumnDefinitions>
        		<Grid.RenderTransform>
        			<TransformGroup>
        				<ScaleTransform/>
        				<SkewTransform/>
        				<RotateTransform/>
        				<TranslateTransform />
        			</TransformGroup>
        		</Grid.RenderTransform>
        		<ListView  ClipToBounds="True" ItemTemplate="{DynamicResource PathButtonTemplate15x15}" x:Name="Commands"  ItemsPanel="{DynamicResource HorizontalItemsPanelTemplate}" ItemsSource="{Binding Commands}" Background="#00000000" BorderThickness="0" ItemContainerStyle="{DynamicResource SlickListBoxItemStyle}" />
                <controls:TwoStateButton x:Name="button" Width="30" Height="30" Style="{StaticResource TwoStateButtonStyle1}"  Cursor="Hand" ToolTip="Click to toggle options" Grid.Column="1"  behave:AnimationBehaviors.StoryboardA="SlideLeft" behave:AnimationBehaviors.StoryboardB="SlideRight"  Grid.Row="0"  Margin="0" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" Foreground="{x:Null}">
                    <controls:TwoStateButton.Resources>
                        <Storyboard x:Key="SlideLeft" FillBehavior="HoldEnd" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="AreaB">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" KeySpline="0.5,0,0.5,1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="AreaA">
                        <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" KeySpline="0.5,0,0.5,1"/>
                    </DoubleAnimationUsingKeyFrames>-->
                            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AreaA">
                        <SplineDoubleKeyFrame  KeyTime="0:0:0.8" Value="1" KeySpline="0.5,0,0.5,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AreaB">
                        <SplineDoubleKeyFrame KeyTime="0:0:0.08" Value="0" KeySpline="0.5,0,0.5,1"/>
                    </DoubleAnimationUsingKeyFrames>-->

                        </Storyboard>
                        <Storyboard x:Key="SlideRight" FillBehavior="HoldEnd" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="AreaB">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="35" KeySpline="0.5,0,0.5,1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="AreaA">
                        <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="100" KeySpline="0.5,0,0.5,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AreaA">
                        <SplineDoubleKeyFrame KeyTime="0:0:0.08" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AreaB">
                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1" KeySpline="0.5,0,0.5,1"/>
                    </DoubleAnimationUsingKeyFrames>-->
                        </Storyboard>
                    </controls:TwoStateButton.Resources>

                </controls:TwoStateButton>

            </Grid>
                </Grid>
    	   		<Button HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Top" Command="{Binding CloseCommand}" Style="{DynamicResource CloseButtonStyle}" Background="#00000000" BorderBrush="{x:Null}" Height="15.25" Width="22">
    			<!--<Path  Name="path2995" Height="8.565" Stretch="Fill" Width="9.207" Path.Fill="#72000000">
				<Path.Data>
					<PathGeometry Figures="m 4.9699932 20.463844 c -1.0666717 -1.285261 -0.8111232 -2.020231 1.5646465 -4.5 L 9.3741824 13 6.486694 9.9861115 C 3.7781161 7.1589654 3.7037026 6.8677259 5.2857143 5.2857143 6.8677259 3.7037026 7.1589654 3.7781161 9.9861115 6.486694 L 13 9.3741824 16.013888 6.486694 c 2.827147 -2.7085779 3.118386 -2.7829914 4.700398 -1.2009797 1.582011 1.5820116 1.507598 1.8732511 -1.20098 4.7003972 L 16.625818 13 l 2.887488 3.013888 c 2.708578 2.827147 2.782991 3.118386 1.20098 4.700398 -1.582012 1.582011 -1.873251 1.507598 -4.700398 -1.20098 L 13 16.625818 10.195281 19.312909 c -3.2678532 3.130802 -3.5335706 3.18933 -5.2252878 1.150935 z" FillRule="NonZero"/></Path.Data>
			</Path>-->
    		</Button>
        <Grid x:Name="AreaB" Grid.ColumnSpan="2" Grid.Row="2" Background="Transparent" Opacity="1"  Height="0" VerticalAlignment="Top" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" ></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding Filter}" ClipToBounds="True"/>
                <StackPanel Orientation="Horizontal" Grid.Column="1">
                    <Button Command="{Binding FilterCommand}" Template="{DynamicResource TextButtonControlTemplate}" Background="#FFFFFFFE" BorderBrush="White" >ok</Button>
                    <Button Command="{Binding CancelFilterCommand}" Template="{DynamicResource TextButtonControlTemplate}" Background="White" BorderBrush="White" >cancel</Button>
                </StackPanel>
            </Grid>
        </Grid>

        <Grid Grid.ColumnSpan="2"  Grid.Row="3"  Margin="1" >
         
       <!--<TextBlock  Foreground="#64000000" Text="{Binding Content.Count}" FontSize="32" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Segoe WP Light"></TextBlock>-->
            <ScrollViewer x:Name="secondary" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Template="{DynamicResource SlickScrollViewerTemplate}">
                <ScrollViewer.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="-355"/>
                    </TransformGroup>
                </ScrollViewer.RenderTransform>
                <Grid >
                    <!--<Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform X="-355"/>
                        </TransformGroup>
                    </Grid.RenderTransform>-->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <ContentControl Content="{Binding SelectedObject}">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type models:TweetViewmodel}">
                                <views:EnlargedTweetView></views:EnlargedTweetView>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                    <Button Grid.Row="1" Command="{Binding NavigateToMainView}" Style="{StaticResource CommandPathButtonNavigation}" Height="40" Width="40" HorizontalAlignment="Left" VerticalAlignment="Top"
 Content="M 8.2021007 28.361475 C -3.1528233 22.548697 -2.5973294 6.1061016 9.1187893 1.2275206 21.671411 -3.9993793 34.106091 8.3928145 28.861271 20.902547 25.470026 28.991208 16.065272 32.386764 8.2021007 28.361475 z M 23.822473 23.792866 c 3.274628 -3.263439 4.215022 -5.220494 4.215022 -8.771883 0 -3.551389 -0.940394 -5.5084437 -4.215022 -8.7718814 -5.864365 -5.84432839 -11.739546 -5.84432839 -17.6039118 0 -5.86436534 5.8443284 -5.86436534 11.6994354 0 17.5437644 5.8643658 5.844327 11.7395468 5.844327 17.6039118 0 z M 9.6579121 18.956654 C 6.2556324 15.347466 6.2795985 14.237748 9.8316411 10.912177 13.581253 7.4016355 16.939426 7.2185034 13.780805 10.696816 c -2.213315 2.43733 -2.165322 2.470953 3.526995 2.470953 4.303166 0 5.770846 0.471323 5.770846 1.853214 0 1.381893 -1.46768 1.853215 -5.770846 1.853215 -5.692317 0 -5.74031 0.03362 -3.526995 2.470953 3.346173 3.684846 -0.636869 3.309526 -4.1228929 -0.388497 z"
        
                        ></Button>
                </Grid>
            </ScrollViewer>
            <Grid x:Name="main">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <!--<TreeView Background="Transparent" SelectedValuePath="{Binding Path=SelectedObject,Mode=TwoWay}"  SelectedItemChanged="mainbox_SelectedItemChanged_1"  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"  x:Name="mainbox"  MinHeight="395" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Content}" Style="{DynamicResource TreeViewStyle1}" >
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="{DynamicResource tweetbackgroundbrushkey}"></Setter>
                        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter ContentSource="Header" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical">
                            </VirtualizingStackPanel>
                    </ItemsPanelTemplate>
                </TreeView.ItemsPanel>
            </TreeView>-->
                <telerik:RadListBox  Background="Transparent" BorderBrush="Transparent" x:Name="mainbox"  ItemsSource="{Binding Content}" SelectedItem="{Binding SelectedObject,Mode=TwoWay}" MinHeight="395" SelectedIndex="-1" >
                    <telerik:RadListBox.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </telerik:RadListBox.RenderTransform>
                    <!--<telerik:RadListBox.ItemContainerStyle>
                        <Style TargetType="telerik:RadListBoxItem">
                            <Setter Property="MinWidth" Value="300"></Setter>
                        </Style>
                    </telerik:RadListBox.ItemContainerStyle>-->
                        <telerik:RadListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <telerik:VirtualizingWrapPanel Orientation="Horizontal" ItemWidth="312"></telerik:VirtualizingWrapPanel>
                        </ItemsPanelTemplate>
                    </telerik:RadListBox.ItemsPanel>
                </telerik:RadListBox>
                <!--<controls:SlideInListBox SelectedItem="{Binding SelectedObject,Mode=TwoWay}" VirtualizingStackPanel.VirtualizationMode="Standard"   MinHeight="395" SelectedIndex="-1"  x:Name="mainbox" Background="Transparent"   BorderThickness="1"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Content}" Style="{DynamicResource SlickListBox}" ItemContainerStyle="{DynamicResource SlickListBoxItemStyle}"  BorderBrush="{x:Null}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
                    <controls:SlideInListBox.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </controls:SlideInListBox.RenderTransform>
                    <controls:SlideInListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <telerik:VirtualizingWrapPanel CanHorizontallyScroll="False" CanVerticallyScroll="True" HorizontalAlignment="Stretch"   Orientation="Vertical">                          
                                <i:Interaction.Behaviors>
        						<ei:FluidMoveBehavior Duration="0:0:0.3" AppliesTo="Children">
        							<ei:FluidMoveBehavior.EaseY>
        								<PowerEase EasingMode="EaseOut" Power="10" />
        							</ei:FluidMoveBehavior.EaseY>
        						</ei:FluidMoveBehavior>
        					</i:Interaction.Behaviors>
                            </telerik:VirtualizingWrapPanel>
                        </ItemsPanelTemplate>
                    </controls:SlideInListBox.ItemsPanel>
                </controls:SlideInListBox>-->
            </Grid>
        </Grid>       
    </Grid>
</UserControl>
